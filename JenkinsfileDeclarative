pipeline{
agent any

tools {
  maven 'Maven-3.8.6'
}


triggers {
  pollSCM '* * * * *'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}

stages {
  stage('checkOutCode') {
    steps {
      git credentialsId: 'github', url: 'https://github.com/kavita192/maven-web-application.git'
    }
}


  stage('Build') {
    steps {
      sh "mvn clean package"
    }
}


  stage('ExecuteSonarQubeReport') {
    steps {
      sh "mvn clean sonar:sonar package"
    }
}


 stage('UploadArtifactoryIntoRepo') {
    steps {
      sh "mvn clean package deploy"
    }
}


 stage('Deploy') {
    steps {
      sshagent(['7a9f0a96-1e14-4292-b15f-6611d3696201']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.3.77:/opt/apache-tomcat-9.0.70/webapps/"  
}
    }
}

}// stages closing


post {
  success {
    slackBuildNotification 'SUCCESS'
  }
  failure {
    slackBuildNotification 'FAILURE'
  }
}

} //pipeline closing


def slackBuildNotification(String buildStatus) {
 
  // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESS'
   // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} \n Job Name: '${env.JOB_NAME} \n Build Number: [${env.BUILD_NUMBER}]' \n Build URL: (${env.BUILD_URL}) \n  }"
  
  
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
